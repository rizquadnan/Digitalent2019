{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of [26 5] Keras Tuner - ADF","version":"0.3.2","provenance":[{"file_id":"1dfUfiD6126nyC3BwDWpwEKZqDMe5JnjJ","timestamp":1565054815150}],"collapsed_sections":[],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"EfwbLGN0zdro","colab_type":"text"},"source":["<img src = \"https://i.imgur.com/UjutVJd.jpg\" align = \"center\">"]},{"cell_type":"markdown","metadata":{"id":"Uv0Pngj-UCkp","colab_type":"text"},"source":["# Keras Tuner\n","<img src = \"https://i.ibb.co/4RyZpZ2/keras-tuner.png\" height=\"300\" align = \"center\">\n","\n","Keras tuner adalah library pencari hyperparameter secara otomatis (Hyperparameter tuner) yang dibangun spesifik untuk `tf.keras` dengan TensorFlow 2.0.\n","\n","Library ini ditujukan untuk para praktisi AI, pembuat algoritma hypertuner dan perancang model bisa sesederhana mungkin membangun model dengan API yang bersih dan mudah.\n","\n","Library ini adalah library baru yang masih berstatus `alpha release` dan diperkenalkan pada acara Google I/O 2019 "]},{"cell_type":"markdown","metadata":{"id":"zsak3xpqWnay","colab_type":"text"},"source":["## Instalasi Keras Tuner"]},{"cell_type":"markdown","metadata":{"id":"4YXxFOQbXzzy","colab_type":"text"},"source":["Untuk menggunakan Keras Tuner, kita perlu TensorFlow v2.0 yang saat ini masih berstatus `beta`"]},{"cell_type":"code","metadata":{"id":"CFjR-bx8X1Z-","colab_type":"code","colab":{}},"source":["from __future__ import absolute_import, division, print_function, unicode_literals\n","\n","# Install TensorFlow\n","!pip install tensorflow==2.0.0-beta1"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"QBeyqKKhYBIq","colab_type":"text"},"source":["Selanjutnya kita pasang library keras-tuner"]},{"cell_type":"code","metadata":{"id":"rBkyRMBxWp5-","colab_type":"code","colab":{}},"source":["!git clone https://github.com/keras-team/keras-tuner.git\n","!pip install keras-tuner/."],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"0rVVFWegZPbU","colab_type":"text"},"source":["---\n","NOTE: <BR>\n","<font size=5>**INSTALASI PADA GOOGLE COLAB MUNGKIN MENYEBABKAN CRASH**<BR>\n","  **JANGAN KHAWATIR,**<BR>\n","  **TANPA MENGULANG INSTALASI DARI AWAL, JALANKAN INSTALASI DI BAWAH INI**</font>\n","  \n","---\n"]},{"cell_type":"code","metadata":{"id":"UBdd44-Efe9Z","colab_type":"code","colab":{}},"source":["!pip install keras-tuner/."],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"t7W-6mmQVO13","colab_type":"text"},"source":["# Hyperparameter\n","\n","Hyperparameter adalah parameter yang nilainya diatur oleh perancang model sebelum proses pembelajaran dimulai. \n","\n","Yang termasuk pada nilai hyperparameter antara lain:\n","* arsitektur\n"," * jumlah layer\n"," * jumlah neuron\n","* parameter pelatihan\n"," * learning rate\n"," * regularisasi\n"," * nilai dropout\n","dan lain sebagainya\n"]},{"cell_type":"markdown","metadata":{"id":"_-PzJZqAWZLK","colab_type":"text"},"source":["# Mencoba Keras Tuner untuk MNIST dataset"]},{"cell_type":"code","metadata":{"id":"GglshHl-WTgD","colab_type":"code","colab":{}},"source":["import numpy as np\n","from tensorflow import keras\n","from tensorflow.keras import layers\n","\n","from kerastuner import RandomSearch\n"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"2VMUU3lMcFMk","colab_type":"text"},"source":["## Load Dataset MNIST"]},{"cell_type":"code","metadata":{"id":"BY-2CaubYh6L","colab_type":"code","colab":{}},"source":["(x_train, y_train), (x_val, y_val) = keras.datasets.mnist.load_data()\n","x_train = x_train.astype('float32') / 255.\n","x_val = x_val.astype('float32') / 255."],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"uTc-kdRDcHnj","colab_type":"text"},"source":["## Definisikan fungsi pencarian hyperparameter\n","\n","Di sini kita definisikan arsitektur model menggunakan JST 2 layer\n","\n","Hyperparameter arsitektur yang dicoba:\n","* Jumlah Neuron dari 256 hingga 512 dengan kelipatan 128\n","\n","Hyperparameter pelatihan yang dicoba:\n","* Learning date `1e-2` dan `1e-3`\n","\n","Model Tuner akan mencoba semua kemungkinan kombinasi"]},{"cell_type":"code","metadata":{"id":"P-yA7c9BpGW3","colab_type":"code","colab":{}},"source":["def build_model(hp):\n","  \n","  choice_unit          = hp.Range('units', min_value=256, max_value=512, step=128)\n","  choice_learning_rate = hp.Choice('learning_rate',values=[1e-2, 1e-3])\n","  \n","  \n","  model = keras.Sequential()\n","  model.add(layers.Flatten(input_shape=(28,28)))\n","  model.add(layers.Dense(units=choice_unit,\n","                         activation='relu'))\n","  model.add(layers.Dense(10, activation='softmax'))\n","  model.compile(\n","      optimizer=keras.optimizers.Adam(choice_learning_rate),\n","      loss='sparse_categorical_crossentropy',\n","      metrics=['accuracy'])\n","  return model"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"le1WFCWccNBK","colab_type":"text"},"source":["## Inisialisasi Model Pencarian\n","di sini kita akan lakukan percobaan tuning sebanya 4 kali percobaan, dengan metrik pemilihan model terbaik berdasarkan akurasi validasi\n"]},{"cell_type":"code","metadata":{"id":"QabT6rs9Yh02","colab_type":"code","colab":{}},"source":["tuner = RandomSearch(\n","    build_model,\n","    objective='val_accuracy',\n","    max_trials=4,\n","    executions_per_trial=2,\n","    directory='test_directory')\n","\n","\n","# Display search space overview\n","tuner.search_space_summary()"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"GDm2MdxaeqJP","colab_type":"text"},"source":["## Jalankan Proses Tuning"]},{"cell_type":"code","metadata":{"id":"p3iaE6wNYhuz","colab_type":"code","colab":{}},"source":["tuner.search(x_train, y_train,\n","             batch_size=500,\n","             epochs=10,\n","             validation_data=(x_val, y_val))"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"NlC3tZh-ewyk","colab_type":"text"},"source":["## Tampilkan Summary Pencarian\n","\n","Tampilkan model terbaik, beserta hyperparamter dan hasil akurasi"]},{"cell_type":"code","metadata":{"id":"aHopmbf2Y9V9","colab_type":"code","colab":{}},"source":["tuner.results_summary()"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"awBGWeVTe3fR","colab_type":"text"},"source":["## Tampilkan Arsitektur dan Hyperparameter Terbaik"]},{"cell_type":"code","metadata":{"id":"VAsR2KZWY-7Z","colab_type":"code","colab":{}},"source":["import tensorflow.keras.backend as K\n","\n","\n","# Retrieve the best model.\n","best_model = tuner.get_best_models(num_models=1)[0]\n","best_model.summary()\n","\n","print('Learning Rate terbaik =',K.eval(best_model.optimizer.lr))"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"HqHuRjb7fEY1","colab_type":"text"},"source":["## Tampilkan Akurasi Model Terbaik"]},{"cell_type":"code","metadata":{"id":"ghfckNyzWTdd","colab_type":"code","colab":{}},"source":["loss, accuracy = best_model.evaluate(x_val, y_val)\n","print('Akurasi Model =',accuracy)"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"uB_ojCQ6zmKS","colab_type":"text"},"source":["<p>Copyright &copy; 2019 <a href=https://www.linkedin.com/in/andityaarifianto/>ADF</a> </p>"]}]}