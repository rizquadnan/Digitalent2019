{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of [28 5] Deep Dream using TF2 - ADF","version":"0.3.2","provenance":[{"file_id":"1ZfCzWJigcSvhYZkACAcdq4DQlx4IIHtN","timestamp":1565145404049}],"collapsed_sections":[],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"EfwbLGN0zdro","colab_type":"text"},"source":["<img src = \"https://i.imgur.com/UjutVJd.jpg\" align = \"center\">"]},{"cell_type":"markdown","metadata":{"id":"3lseFQE38696","colab_type":"text"},"source":["# DeepDream menggunakan TensorFlow 2.0\n","\n","DeepDream adalah eksperimen yang memvisualisasikan pola yang dipelajari oleh jaringan saraf. Mirip dengan ketika seorang anak menonton awan dan mencoba untuk menafsirkan bentuk acak, DeepDream over-interpretasi dan meningkatkan pola yang dilihatnya dalam gambar.\n","\n","Proses ini dilakukan dengan meneruskan gambar melalui jaringan, kemudian menghitung gradien gambar sehubungan dengan aktivasi lapisan tertentu. Gambar kemudian dimodifikasi untuk meningkatkan aktivasi ini, meningkatkan pola yang dilihat oleh jaringan, dan menghasilkan gambar seperti mimpi. \n","\n","Proses ini dijuluki \"Inceptionism\" (referensi ke InceptionNet, dan Inception film).\n","\n","Mari kita tunjukkan bagaimana Anda bisa membuat jaringan saraf \"mimpi\" dan meningkatkan pola nyata yang dilihatnya dalam gambar."]},{"cell_type":"markdown","metadata":{"id":"4JLy7cAH9HAp","colab_type":"text"},"source":["## Install TensorFlow 2.0\n","Karena tutorial ini menggunakan TensorFlow 2.0,\n","kita harus menginstallnya terlebih dahulu"]},{"cell_type":"code","metadata":{"id":"Ej4WmkQQ4crv","colab_type":"code","colab":{}},"source":["from __future__ import absolute_import, division, print_function, unicode_literals\n","\n","!pip install tensorflow-gpu==2.0.0-beta1"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"t0NXxGo19SmF","colab_type":"text"},"source":["## Import Modul"]},{"cell_type":"code","metadata":{"id":"6dCzehMLQsIz","colab_type":"code","colab":{}},"source":["import tensorflow as tf\n","\n","from IPython.display import clear_output\n","import matplotlib as mpl\n","import matplotlib.pyplot as plt\n","\n","mpl.rcParams['figure.figsize'] = (15, 15)"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"53-3zeKU9Unu","colab_type":"text"},"source":["## Siapkan Gambar Konten\n","\n","Pada contoh kali ini, kita akan gunakan gambar pemandangan tebing gunung Pilatus"]},{"cell_type":"code","metadata":{"id":"PvNzuMxgQsF5","colab_type":"code","colab":{}},"source":["url = 'https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/examples/tutorials/deepdream/pilatus800.jpg'\n","\n","image_path = tf.keras.utils.get_file('myImage.jpg', origin=url)\n","original_img = tf.keras.preprocessing.image.load_img(image_path)\n","plt.imshow(original_img)\n","plt.axis('off')\n","plt.show()"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"2PBybFp89ljY","colab_type":"text"},"source":["## Download Inception Model\n","Untuk contoh kali ini, kita gunakan model InceptionV3"]},{"cell_type":"code","metadata":{"id":"6Q-JCA9MQsDH","colab_type":"code","colab":{}},"source":["base_model = tf.keras.applications.InceptionV3(include_top=False, weights='imagenet')"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"YpFMPR7F9s9K","colab_type":"text"},"source":["Daftar nama layer yang ada di dalam InceptionV3 dapat dilihat jika mengaktifkan cell di bawah\n","\n","daftar nama tersebut bisa dipilih sebagai layer yang akan menghalusinasi gambar"]},{"cell_type":"code","metadata":{"id":"-EEsHKkF6CtG","colab_type":"code","colab":{}},"source":["# base_model.summary()"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Bbm9YPyt95_0","colab_type":"text"},"source":["## Preproses Gambar\n","\n","Praproses gambar agar sesuai dengan model InceptionV3"]},{"cell_type":"code","metadata":{"id":"xmrh9DLbQr5Y","colab_type":"code","colab":{}},"source":["img = tf.keras.preprocessing.image.img_to_array(original_img)\n","img = tf.Variable(tf.keras.applications.inception_v3.preprocess_input(img))"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"g9TehmWR-ZOb","colab_type":"text"},"source":["## Pilih Layer DeepDream\n","\n","Gagasan dalam DeepDream adalah untuk memilih lapisan (atau lapisan) dan memaksimalkan \"loss\" agar gambar semakin \"mengaktivasi\" layer yang dipilih. Kompleksitas fitur yang dimasukkan tergantung pada lapisan yang dipilih\n","\n","Layer di awal jaringan menghasilkan goresan atau pola sederhana, sementara lapisan yang lebih dalam memberikan fitur kompleks dalam gambar, atau bahkan seluruh objek.\n","\n","Di sini, kita pilih dan definisikan layer-layer mana saja yang akan digunakan untuk memberikan halusinasi pada gambar"]},{"cell_type":"code","metadata":{"id":"5MnRIGh2QsAB","colab_type":"code","colab":{}},"source":["names = ['mixed2', 'mixed4', 'mixed6']\n","layers = [base_model.get_layer(name).output for name in names]\n","\n","# Create our feature extraction model\n","dream_model = tf.keras.Model(inputs=base_model.input, outputs=layers)"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"2dVkxs_o-gvB","colab_type":"text"},"source":["## Helper Function\n","Fungsi bantuan untuk menghitung loss DeepDream dan memproses gambar output"]},{"cell_type":"code","metadata":{"id":"xELEgLm5Qr8u","colab_type":"code","colab":{}},"source":["def calc_loss(image):\n","  image = image[None, ...]\n","  layer_activations = dream_model(image)\n","\n","  losses = []\n","  for act in layer_activations:\n","    loss = tf.math.reduce_mean(act)\n","    losses.append(loss)\n","  total_loss = tf.add_n(losses)\n","  return total_loss\n","\n","def deprocess(img):\n","  return (img + 1.0)/2.0"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"TXh0v3Pj-nmX","colab_type":"text"},"source":["## Gradient Ascent\n","Fungsi optimasi Gradient Ascent untuk menjalankan proses DeepDream\n","\n","Menambahkan gradien ke gambar meningkatkan pola yang dilihat oleh jaringan. Pada setiap langkah, kita akan menciptakan gambar yang semakin mengaktivasi layer yang dipilih dalam jaringan."]},{"cell_type":"code","metadata":{"id":"QkQA0t7a3WwC","colab_type":"code","colab":{}},"source":["optimizer = tf.keras.optimizers.Adam(learning_rate=0.005)\n","\n","@tf.function\n","def deepdream():\n","  with tf.GradientTape() as tape:\n","    loss = -calc_loss(img)\n","  gradient = tape.gradient(loss, img)\n","\n","  optimizer.apply_gradients([(gradient, img)])\n","  img.assign(tf.clip_by_value(img, -1, 1))\n","  return loss\n"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"jbjdKZDV-wyq","colab_type":"text"},"source":["## Mulai Optimasi\n","Di sini, mari kita mulai optimasi DeepDream selama 500 iterasi"]},{"cell_type":"code","metadata":{"id":"nLs5WdEu3WtQ","colab_type":"code","colab":{}},"source":["STEPS = 500"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"9ju6Q3NV3Wqi","colab_type":"code","colab":{}},"source":["mpl.rcParams['figure.figsize'] = (8, 8)\n","mpl.rcParams['axes.grid'] = False\n","\n","for step in range(STEPS):\n","  loss = deepdream()\n","  if step % 50 == 0:\n","    plt.imshow(deprocess(img))\n","    plt.axis('off')\n","    plt.show()\n","    print ('Step %d, loss %f' % (step, -1.0*loss))\n","\n","\n","\n","print('\\n\\nFinal Result')\n","mpl.rcParams['figure.figsize'] = (15, 15)\n","plt.imshow(deprocess(img))\n","plt.axis('off')\n","plt.show()"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"H59VB3oo-5ZM","colab_type":"text"},"source":["Bagaimana hasil DeepDream-nya?\n","\n","Nyenyak?\n","\n","Cobalah ubah menggunakan layer yang lain"]},{"cell_type":"markdown","metadata":{"id":"uB_ojCQ6zmKS","colab_type":"text"},"source":["<p>Copyright &copy; 2019 <a href=https://www.linkedin.com/in/andityaarifianto/>ADF</a> </p>"]}]}